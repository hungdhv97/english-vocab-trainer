server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*log

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          service: nginx
          log_type: access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<request_uri>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)" "(?P<http_x_forwarded_for>[^"]*)" rt=(?P<request_time>\S+) uct="(?P<upstream_connect_time>\S*)" uht="(?P<upstream_header_time>\S*)" urt="(?P<upstream_response_time>\S*)"'
      - labels:
          remote_addr:
          method:
          status:
          request_time:
      - timestamp:
          source: time_local
          format: 02/Jan/2006:15:04:05 -0700

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          service: nginx
          log_type: error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?P<level>\w+)\] (?P<pid>\d+)#(?P<tid>\d+): (?P<message>.*)'
      - labels:
          level:
          pid:
      - timestamp:
          source: timestamp
          format: 2006/01/02 15:04:05

  # Docker container logs (if using Docker logging driver)
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - cri: {}

  # Application logs (if applications write to specific log files)
  - job_name: backend-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: backend
          service: backend
          log_type: application
          __path__: /var/log/backend/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            service: service
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339

  # PostgreSQL logs
  - job_name: postgres-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          service: postgres
          log_type: database
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w{3}) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      - labels:
          level:
          pid:
      - timestamp:
          source: timestamp
          format: 2006-01-02 15:04:05.000 MST

  # Redis logs
  - job_name: redis-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: redis
          log_type: cache
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>.) (?P<message>.*)'
      - labels:
          level:
          role:
          pid:
      - timestamp:
          source: timestamp
          format: 02 Jan 2006 15:04:05.000
